apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: promote
  namespace: eggman-kargo
spec:
  vars:
    - name: repoURL
      value: https://github.com/bergtobias/homelab-infra.git
    - name: branch
      value: main
    - name: image
      value: ghcr.io/bergtobias/eggman
    - name: openpr
      value: "false"
  steps:
    # Clone the Git repository that contains the Kustomize configuration
    # to the ./src directory.
    - uses: git-clone
      config:
        repoURL: ${{ vars.repoURL }}
        checkout:
          - branch: ${{ vars.branch }}
            path: ./
    - uses: kustomize-set-image
      # Update the image in the Kustomize configuration located at ./env/<stage>

      # in the repository.
      as: update-image
      config:
        path: ./apps/eggman/prod
        images:
          - image: ${{ vars.image }}
            tag: ${{ imageFrom( vars.image ).Tag }}
    - uses: git-commit
      # Commit the changes to the Git repository.

      as: commit
      config:
        path: ./
        message: ${{ task.outputs['update-image'].commitMessage }}
    - uses: git-push
      # Push the changes to the Git repository.

      if: ${{ vars.openpr != 'true' }}
      config:
        path: ./
    - uses: git-push
      # Push the changes to a newly created branch in the Git repository.

      if: ${{ vars.openpr == 'true' }}
      as: push
      config:
        path: ./
        generateTargetBranch: true
    - uses: git-open-pr
      # Open a pull request to merge the changes into the main branch.

      as: open-pr
      if: ${{ vars.openpr == 'true' }}
      config:
        repoURL: ${{ vars.repoURL }}
        createTargetBranch: true
        sourceBranch: ${{ task.outputs.push.branch }}
        targetBranch: ${{ vars.branch }}
    - uses: git-wait-for-pr
      # Wait for the pull request to be merged.

      as: wait-for-pr
      if: ${{ vars.openpr == 'true' }}
      config:
        repoURL: ${{ vars.repoURL }}
        prNumber: ${{ task.outputs['open-pr'].prNumber }}
    - uses: argocd-update
      # If you have an Argo CD Application that should be synced after the Git

      # app name.te
      # repository is updated, uncomment the following lines and specify the
      config:
        apps:
          - name: eggman-${{ ctx.stage }}
            sources:
          - repoURL: ${{ vars.repoURL }}
